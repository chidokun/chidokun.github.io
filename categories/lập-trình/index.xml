<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Lập trình on Nguyễn Tuấn&#39;s Blog</title>
    <link>https://chidokun.github.io/categories/l%E1%BA%ADp-tr%C3%ACnh/</link>
    <description>Recent content in Lập trình on Nguyễn Tuấn&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>vi</language>
    <lastBuildDate>Fri, 06 Aug 2021 19:00:39 +0700</lastBuildDate>
    
	<atom:link href="https://chidokun.github.io/categories/l%E1%BA%ADp-tr%C3%ACnh/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Clean Code: Bạn đã đặt tên biến, hàm đủ &#34;clean&#34;?</title>
      <link>https://chidokun.github.io/2021/08/clean-code-meaningful-name/</link>
      <pubDate>Fri, 06 Aug 2021 19:00:39 +0700</pubDate>
      
      <guid>https://chidokun.github.io/2021/08/clean-code-meaningful-name/</guid>
      <description>&lt;p&gt;Mỗi lần đọc lại quyển sách &lt;em&gt;Clean Code&lt;/em&gt; của tác giả &lt;em&gt;Robert C. Martin&lt;/em&gt;, mình lại nhận ra những điều mới để có thể giúp bản thân viết code chuyên nghiệp hơn. Cách đặt tên biến, hàm cũng ảnh hưởng khá nhiều đến độ &lt;em&gt;&amp;ldquo;clean&amp;rdquo;&lt;/em&gt; của code mà đôi lúc chúng ta lại quên mất hoặc không để ý và khiến cho nó trở thành một đống hỗn độn theo thời gian.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Index Priority Queue: Cải tiến Priority Queue</title>
      <link>https://chidokun.github.io/2021/07/index-priority-queue/</link>
      <pubDate>Thu, 29 Jul 2021 20:17:38 +0700</pubDate>
      
      <guid>https://chidokun.github.io/2021/07/index-priority-queue/</guid>
      <description>&lt;p&gt;Ở bài viết &lt;a href=&#34;https://chidokun.github.io/2021/07/priority-queue/&#34;&gt;Priority Queue và những cách cài đặt&lt;/a&gt;, mình đã giới thiệu qua cấu trúc Priority Queue, những đặc trưng và cách cài đặt. Tuy nhiên trong một số trường hợp, chúng ta sẽ có nhu cầu cập nhật hoặc xóa phần tử khỏi Queue thông qua một index. Trong bài viết này chúng ta sẽ cùng cải tiến Priority Queue để có thể thực hiện các chức năng trên.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Thuật toán Prim: Cài đặt thuật toán</title>
      <link>https://chidokun.github.io/2021/07/prim-algorithm-implement/</link>
      <pubDate>Sun, 25 Jul 2021 20:26:28 +0700</pubDate>
      
      <guid>https://chidokun.github.io/2021/07/prim-algorithm-implement/</guid>
      <description>&lt;p&gt;Bài viết &lt;a href=&#34;https://chidokun.github.io/2021/07/prim-algorithm/&#34;&gt;Thuật toán Prim: Tìm cây khung nhỏ nhất&lt;/a&gt; đã giới thiệu đến các bạn ý tưởng của thuật toán này cũng như từng bước chạy thuật toán. Tiếp theo sẽ là phần hướng dẫn cài đặt &lt;em&gt;thuật toán Prim&lt;/em&gt; cho đồ thị vô hướng có trọng số bằng ngôn ngữ Java.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Thuật toán Prim: Tìm cây khung nhỏ nhất</title>
      <link>https://chidokun.github.io/2021/07/prim-algorithm/</link>
      <pubDate>Thu, 22 Jul 2021 22:00:25 +0700</pubDate>
      
      <guid>https://chidokun.github.io/2021/07/prim-algorithm/</guid>
      <description>&lt;p&gt;Hôm nay mình xin chia sẻ một số ghi chú về &lt;em&gt;Thuật toán Prim&lt;/em&gt; dùng để giải bài toán tìm cây khung nhỏ nhất (&lt;strong&gt;Minimum Spanning Tree&lt;/strong&gt;) cho đồ thị vô hướng có trọng số. Prim cũng là một trong những thuật toán cổ điển để giải bài toán này.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Độ phức tạp thời gian của thuật toán</title>
      <link>https://chidokun.github.io/2021/07/complexity-of-time/</link>
      <pubDate>Sat, 17 Jul 2021 21:33:22 +0700</pubDate>
      
      <guid>https://chidokun.github.io/2021/07/complexity-of-time/</guid>
      <description>&lt;p&gt;Bàn về độ phức tạp thời gian, mình vẫn thường hay nghe các bạn nói &lt;em&gt;&amp;ldquo;Một vòng &lt;code&gt;for&lt;/code&gt; là $O(N)$, hai vòng &lt;code&gt;for&lt;/code&gt; lồng nhau là $O(N^2)$&amp;rdquo;&lt;/em&gt;. Thực ra không hẳn là như thế, nó còn phụ thuộc vào số bước thực hiện mỗi lần lặp. Mình cũng sẽ không bàn về phương pháp khoa học để đánh giá thuật toán mà thay vào đó nói về cách để mường tượng xác định độ phức tạp của thuật toán.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Priority Queue và những cách cài đặt</title>
      <link>https://chidokun.github.io/2021/07/priority-queue/</link>
      <pubDate>Wed, 14 Jul 2021 18:03:38 +0700</pubDate>
      
      <guid>https://chidokun.github.io/2021/07/priority-queue/</guid>
      <description>&lt;p&gt;Hôm nay chúng ta cùng điểm qua một cấu trúc dữ liệu thuộc dòng họ nhà Queue có một tính chất khá đặc biệt - đẩy vào và lấy ra theo độ ưu tiên - chính là &lt;em&gt;Priority Queue&lt;/em&gt;. Nó có rất nhiều ứng dụng, điển hình là trong &lt;a href=&#34;https://chidokun.github.io/2021/07/huffman-coding-p2/&#34;&gt;Thuật toán nén Huffman Coding&lt;/a&gt; mà mình từng đề cập. Trong bài này chúng ta sẽ đi qua một số cách cài đặt của Priority Queue.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Sleep Sort: Thuật toán sort bá đạo</title>
      <link>https://chidokun.github.io/2021/07/sleep-sort/</link>
      <pubDate>Mon, 12 Jul 2021 22:52:28 +0700</pubDate>
      
      <guid>https://chidokun.github.io/2021/07/sleep-sort/</guid>
      <description>&lt;p&gt;Nghe tên có thể bạn nghĩ rằng khi dùng thuật toán này thì chúng ta có thể rung đùi mà ngủ không cần làm gì hết? Bạn có từng nghe qua thuật toán sort nào mà số phép so sánh bằng 0 chưa? Nếu chưa thì &lt;em&gt;Sleep Sort&lt;/em&gt; là một thuật toán bá đạo như vậy đấy.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Heap và một số ghi chú</title>
      <link>https://chidokun.github.io/2021/07/heap-note/</link>
      <pubDate>Sun, 11 Jul 2021 12:46:28 +0700</pubDate>
      
      <guid>https://chidokun.github.io/2021/07/heap-note/</guid>
      <description>&lt;p&gt;&lt;em&gt;Heap&lt;/em&gt; được ứng dụng khá nhiều trong các cấu trúc dữ liệu và giải thuật. Nếu bạn đã nghe qua Heap sort thì chắc chắn sẽ làm quen với khái niệm này. Ngoài ra, &lt;em&gt;Heap&lt;/em&gt; cũng còn được ứng dụng trong Prority Queue - một cấu trúc dữ liệu hoạt động theo cơ chế vào trước ra trước. Bài viết này sẽ note một số ý chính về &lt;em&gt;Heap&lt;/em&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Tạo Progress Bar trong Java Console</title>
      <link>https://chidokun.github.io/2021/07/console-progress-bar/</link>
      <pubDate>Wed, 07 Jul 2021 17:54:21 +0700</pubDate>
      
      <guid>https://chidokun.github.io/2021/07/console-progress-bar/</guid>
      <description>&lt;p&gt;Là một lập trình viên làm việc khá nhiều với terminal, mình thường xuyên thấy các lệnh chạy trên console cũng có thanh tiến trình để thể hiện phần trăm hoàn thành công việc cũng khá hay ho. Vì vậy, trong bài viết này, chúng ta cùng thử làm một thanh Progress Bar với Java nhé.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Huffman Decoding: Quá trình giải nén</title>
      <link>https://chidokun.github.io/2021/07/huffman-coding-p3/</link>
      <pubDate>Sun, 04 Jul 2021 17:45:23 +0700</pubDate>
      
      <guid>https://chidokun.github.io/2021/07/huffman-coding-p3/</guid>
      <description>&lt;p&gt;Ở bài viết &lt;a href=&#34;https://chidokun.github.io/2021/07/huffman-coding-p2/&#34;&gt;Cài đặt thuật toán Huffman Coding&lt;/a&gt;, chúng ta đã tìm hiểu cách cài đặt thuật toán Huffman Coding để mã hóa (nén) chuỗi dữ liệu thành chuỗi nhị phân. Trong bài viết này, chúng ta sẽ tiếp tục tìm hiểu quá trình giải nén dữ liệu từ cây Huffman và cài đặt phương thức &lt;code&gt;decode(String encoded)&lt;/code&gt; cho class &lt;code&gt;HuffmanCoding&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Cài đặt thuật toán Huffman Coding</title>
      <link>https://chidokun.github.io/2021/07/huffman-coding-p2/</link>
      <pubDate>Sun, 04 Jul 2021 01:00:25 +0700</pubDate>
      
      <guid>https://chidokun.github.io/2021/07/huffman-coding-p2/</guid>
      <description>&lt;p&gt;Với những ý tưởng của thuật toán Huffman Coding ở bài viết &lt;a href=&#34;https://chidokun.github.io/2021/07/huffman-coding-p1/&#34;&gt;Thuật toán nén Huffman Coding&lt;/a&gt;, trong bài viết này chúng ta cùng bàn về cách hiện thực thuật toán này với ngôn ngữ Java.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Thuật toán nén Huffman Coding</title>
      <link>https://chidokun.github.io/2021/07/huffman-coding-p1/</link>
      <pubDate>Fri, 02 Jul 2021 22:33:25 +0700</pubDate>
      
      <guid>https://chidokun.github.io/2021/07/huffman-coding-p1/</guid>
      <description>&lt;p&gt;Nén dữ liệu là phương pháp loại bỏ những thông tin dư thừa trong việc biểu diễn dữ liệu. Nó có nhiều ứng dụng, đặc biệt là trong việc truyền tin vì giúp rút gọn thông tin gửi đi. Có nhiều thuật toán nén dữ liệu và &lt;em&gt;Huffman Coding&lt;/em&gt; là một trong số đó. Bài viết này chủ yếu bàn về ý tưởng của thuật toán này.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Thuật toán Breath First Search</title>
      <link>https://chidokun.github.io/2021/06/graph-bfs-algorithm/</link>
      <pubDate>Sun, 27 Jun 2021 20:03:25 +0700</pubDate>
      
      <guid>https://chidokun.github.io/2021/06/graph-bfs-algorithm/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Breath First Search&lt;/strong&gt; (BFS) cùng với &lt;strong&gt;Depth First Search&lt;/strong&gt; là những thuật toán cơ bản dùng để duyệt qua đồ thị. Trong bài viết này, chúng ta sẽ cùng làm rõ ý tưởng cũng như cách hiện thực thuật toán này.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Thuật toán Depth First Search</title>
      <link>https://chidokun.github.io/2021/06/graph-dfs-algorithm/</link>
      <pubDate>Sat, 26 Jun 2021 21:10:21 +0700</pubDate>
      
      <guid>https://chidokun.github.io/2021/06/graph-dfs-algorithm/</guid>
      <description>&lt;p&gt;Cấu trúc &lt;strong&gt;Graph&lt;/strong&gt; (đồ thị) gồm tập các đỉnh kết nối với nhau qua các cạnh. &lt;strong&gt;Depth First Search&lt;/strong&gt; (DFS) là một trong những thuật toán có thể dùng để duyệt qua đồ thị.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Tổng quan về Đồ thị</title>
      <link>https://chidokun.github.io/2021/06/graph-overview/</link>
      <pubDate>Tue, 22 Jun 2021 21:51:01 +0700</pubDate>
      
      <guid>https://chidokun.github.io/2021/06/graph-overview/</guid>
      <description>&lt;p&gt;Cấu trúc &lt;strong&gt;Graph&lt;/strong&gt; (đồ thị) có rất nhiều ứng dụng trong thực tiễn. Bài viết này sẽ note lại tổng quan những điểm chính về việc implement cấu trúc dữ liệu này.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Tập tành crawl dữ liệu product của Tiki (Phần 2)</title>
      <link>https://chidokun.github.io/2021/01/crawl-tiki-products-p2/</link>
      <pubDate>Sat, 30 Jan 2021 12:28:27 +0700</pubDate>
      
      <guid>https://chidokun.github.io/2021/01/crawl-tiki-products-p2/</guid>
      <description>&lt;p&gt;Qua một khoảng thời gian dài, nhiều bạn feedback với mình là code trong bài viết &lt;a href=&#34;https://chidokun.github.io/2020/05/crawl-tiki-products/&#34;&gt;Tập tành crawl dữ liệu product của Tiki&lt;/a&gt; không thể chạy được nữa. Không bất ngờ lắm với vấn đề này, mình sẽ hướng dẫn các bạn lấy lại dữ liệu về sản phẩm trên Tiki.&lt;/p&gt;
&lt;div class=&#34;alert info &#34;&gt;
  &lt;p&gt;Nhớ đọc lại bài viết &lt;a href=&#34;https://chidokun.github.io/2020/05/crawl-tiki-products/&#34;&gt;Tập tành crawl dữ liệu product của Tiki&lt;/a&gt; để hiểu ý tưởng nhé các bạn.&lt;/p&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Tập tành crawl dữ liệu product của Tiki</title>
      <link>https://chidokun.github.io/2020/05/crawl-tiki-products/</link>
      <pubDate>Sun, 31 May 2020 21:37:27 +0700</pubDate>
      
      <guid>https://chidokun.github.io/2020/05/crawl-tiki-products/</guid>
      <description>&lt;p&gt;Tiki là một trong những trang thương mại điện tử lớn nhất Việt Nam. Với chính sách gắt gao để hạn chế hàng nhái, hàng giả nên những thông tin product trên Tiki có thể &amp;ldquo;tin tưởng&amp;rdquo; được. Nếu có nhu cầu lấy dữ liệu sản phẩm thì dữ liệu trên Tiki cũng là một nguồn tham khảo đáng tin cậy. Bên cạnh đó, mình cũng đang tập tành viết crawler nên trong bài này mình sẽ giới thiệu cách mình đã làm để lấy dữ liệu về sản phẩm trên Tiki.&lt;/p&gt;
&lt;div class=&#34;alert info &#34;&gt;
  &lt;p&gt;Qua một khoảng thời gian dài, nhiều bạn feedback với mình là code trong bài viết này không thể chạy được nữa. Không bất ngờ lắm với vấn đề này, mình sẽ hướng dẫn các bạn lấy lại dữ liệu về sản phẩm trên Tiki với Phần 2 nhé: &lt;a href=&#34;https://chidokun.github.io/2021/01/crawl-tiki-products-p2/&#34;&gt;Tập tành crawl dữ liệu product của Tiki (Phần 2)&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Định dạng màu cho text khi viết Bash script</title>
      <link>https://chidokun.github.io/2020/04/bash-script-text-format-tips/</link>
      <pubDate>Wed, 15 Apr 2020 22:30:00 +0700</pubDate>
      
      <guid>https://chidokun.github.io/2020/04/bash-script-text-format-tips/</guid>
      <description>&lt;p&gt;Với dân developer thì viết script để tự động hóa một số công việc cũng là một việc thường gặp. Mọi người thường nghĩ chỉ có thể hiển thị trên nền trắng đen đơn thuần. Thực ra terminal trên Linux và macOS cũng hỗ trợ hiển thị màu mè hoa lá nữa. Cùng xem cách định dạng chữ và màu để hiển thị trên terminal như thế nào nhé.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Những điều thú vị của số nhị phân trong máy tính</title>
      <link>https://chidokun.github.io/2020/01/useful-things-of-binary-numbers/</link>
      <pubDate>Sat, 04 Jan 2020 22:27:00 +0700</pubDate>
      
      <guid>https://chidokun.github.io/2020/01/useful-things-of-binary-numbers/</guid>
      <description>&lt;p&gt;Xin giới thiệu đến các bạn một số điều hữu ích về số nhị phân mà mình đã từng đọc trong cuốn &lt;em&gt;Write Great Code - Volume 1. Understanding the Machine&lt;/em&gt; của tác giả &lt;em&gt;Randall Hyde&lt;/em&gt;. Đây cũng là một quyển sách khá hay mà các bạn có thể đọc để trau dồi thêm kiến thức.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Truy vấn với JavaScript (Phần 2)</title>
      <link>https://chidokun.github.io/2019/12/query-with-javascript-ep2/</link>
      <pubDate>Tue, 24 Dec 2019 18:00:00 +0700</pubDate>
      
      <guid>https://chidokun.github.io/2019/12/query-with-javascript-ep2/</guid>
      <description>&lt;p&gt;Ở phần 1, mình đã giới thiệu một số cách dùng JavaScript để truy vấn thống kê trên 1 tập dữ liệu. Tiếp tục phần này, mình sẽ giới thiệu thêm một số cách dùng JavaScript để giải quyết một số vấn đề thường gặp liên quan đến mối quan hệ giữa nhiều tập dữ liệu nhé.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Truy vấn với JavaScript (Phần 1)</title>
      <link>https://chidokun.github.io/2019/12/query-with-javascript-ep1/</link>
      <pubDate>Fri, 13 Dec 2019 22:11:33 +0700</pubDate>
      
      <guid>https://chidokun.github.io/2019/12/query-with-javascript-ep1/</guid>
      <description>&lt;p&gt;Một ngày đẹp trời nọ, sếp giao một cục dữ liệu và yêu cầu bạn truy vấn, thống kê đơn giản một vài thứ hay thậm chí là chế biến, xào nấu lại dữ liệu. Có rất nhiều công cụ có thể giúp bạn làm việc này như Excel chẳng hạn. Không may, bạn là một developer chỉ ăn ngủ với code chứ chưa đụng vào Excel bao giờ. Tuy nhiên, nếu có một chút kỹ năng JavaScript, bạn cũng có thể thực hiện việc này một cách dễ dàng và nhanh chóng.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Tìm hiểu lệnh shutdown của Windows 8 và cách tạo shortcut tắt máy</title>
      <link>https://chidokun.github.io/2013/11/tim-hieu-lenh-shutdown-cua-windows-8-va/</link>
      <pubDate>Mon, 25 Nov 2013 22:29:00 +0700</pubDate>
      
      <guid>https://chidokun.github.io/2013/11/tim-hieu-lenh-shutdown-cua-windows-8-va/</guid>
      <description>&lt;p&gt;Windows 8 ra đời kèm theo nhiều tính năng mới rất hữu ích. Đặc biệt ta có thể thấy Windows 8 hoạt động rất mượt mà, tắt và khởi động máy nhanh hơn hẳn người tiền nhiệm. Có được điều này là do Microsoft đã trang bị cho Windows 8 tính năng &amp;ldquo;hybrid boot&amp;rdquo; có thể cải thiện thời gian khởi động nhanh hơn 30-70% so với thời gian khởi động từ chế độ lạnh truyền thống trong Windows 7.
Cùng với đó, lệnh shutdown trong Windows 8 cũng có nhiều thay đổi. Bài viết này đề cập đến các tham số lệnh và cách sử dụng chúng đồng thời hướng dẫn bạn cách tạo shortcut đơn giản để tắt máy.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>